<?php
require ('../paths.php');
require (CONFIG.'config.php');
include (INCLUDES.'db_connect_universal.inc.php');
include (INCLUDES.'url_variables.inc.php');
include (INCLUDES.'db_connect_log.inc.php');
include (LIB.'common.lib.php');
include (INCLUDES.'scrubber.inc.php');

$colname_log = "-1";
if (isset($_GET['id'])) {
	if (is_numeric($_GET['id'])) {
  			$colname_log = (get_magic_quotes_gpc()) ? $_GET['id'] : addslashes($_GET['id']);
	}
	else { echo "Not a valid request."; die;  }

}

$source = "1";
if (isset($_GET['source'])) {
	$source = (get_magic_quotes_gpc()) ? $_GET['source'] : addslashes($_GET['source']);
}

$colname_style = "1";
if (isset($_GET['brewStyle'])) {
	$colname_style = (get_magic_quotes_gpc()) ? $_GET['brewStyle'] : addslashes($_GET['brewStyle']);
}

if ($source == "brewLog") {

	$query_log = sprintf("SELECT * FROM brewing WHERE id = '%s'", $colname_log);
	$log = mysqli_query($connection,$query_log) or die (mysqli_error($connection));
	$row_log = mysqli_fetch_assoc($log);
	$totalRows_log = mysqli_num_rows($log);

	$query_mash_profiles = sprintf("SELECT * FROM mash_profiles WHERE id='%s'", $row_log['brewMashProfile']);
	$mash_profiles = mysqli_query($connection,$query_mash_profiles) or die (mysqli_error($connection));
	$row_mash_profiles = mysqli_fetch_assoc($mash_profiles);
	$totalRows_mash_profiles = mysqli_num_rows($mash_profiles);

	$query_mash_steps = sprintf("SELECT * FROM mash_steps WHERE stepMashProfileID = '%s'", $row_mash_profiles['id']);
	$mash_steps = mysqli_query($connection,$query_mash_steps) or die (mysqli_error($connection));
	$row_mash_steps = mysqli_fetch_assoc($mash_steps);
	$totalRows_mash_steps = mysqli_num_rows($mash_steps);

	$query_water_profiles = sprintf("SELECT * FROM water_profiles WHERE id='%s'", $row_log['brewWaterProfile']);
	$water_profiles = mysqli_query($connection,$query_water_profiles) or die (mysqli_error($connection));
	$row_water_profiles = mysqli_fetch_assoc($water_profiles);
	$totalRows_water_profiles = mysqli_num_rows($water_profiles);

	$query_equip_profiles = sprintf("SELECT * FROM equip_profiles WHERE id='%s'", $row_log['brewEquipProfile']);
	$equip_profiles = mysqli_query($connection,$query_equip_profiles) or die (mysqli_error($connection));
	$row_equip_profiles = mysqli_fetch_assoc($equip_profiles);
	$totalRows_equip_profiles = mysqli_num_rows($equip_profiles);

}

if ($source == "recipe") {

	$query_log = sprintf("SELECT * FROM recipes WHERE id = '%s'", $colname_log);
	$log = mysqli_query($connection,$query_log) or die (mysqli_error($connection));
	$row_log = mysqli_fetch_assoc($log);
	$totalRows_log = mysqli_num_rows($log);

}

$query_name = "SELECT * FROM brewer";
$name = mysqli_query($connection,$query_name) or die (mysqli_error($connection));
$row_name = mysqli_fetch_assoc($name);
$totalRows_name = mysqli_num_rows($name);

$query_style = sprintf("SELECT * FROM styles WHERE brewStyle = '%s'", $colname_style);
$style = mysqli_query($connection,$query_style) or die (mysqli_error($connection));
$row_style = mysqli_fetch_assoc($style);
$totalRows_style = mysqli_num_rows($style);

if ($row_log['brewYeastProfile'] != "") {

	$query_yeast_profiles = sprintf("SELECT * FROM yeast_profiles WHERE id='%s'", $row_log['brewYeastProfile']);
	$yeast_profiles = mysqli_query($connection,$query_yeast_profiles) or die (mysqli_error($connection));
	$row_yeast_profiles = mysqli_fetch_assoc($yeast_profiles);

}

// Begin Beer XML output
$xml_output = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n";
$xml_output .= "<!-- BeerXML Format Generated by BrewBlogger, browser-based brew log and calculation software, http://www.brewblogger.net -->\n";
// Begin <RECIPES> tag (contains all information)
$xml_output .= "<RECIPES>\n";
// Begin <RECIPE> tag (contains recipe information)
	$xml_output .= "\t<RECIPE>\n";
		// Recipe Information
		$replaced = strtr($row_log['brewName'],$html_remove);
    	$xml_output .= "\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
		$xml_output .= "\t\t<VERSION>1</VERSION>\n";
		$xml_output .= "\t\t<TYPE>" . $row_log['brewMethod'] . "</TYPE>\n";
		// Brewer Information
		$replaced = strtr($row_name['brewerFirstName'],$html_remove);
		$replaced2 = strtr($row_name['brewerLastName'],$html_remove);
		$xml_output .= "\t\t<BREWER>" . strip_tags($replaced) ." ".  strip_tags($replaced2) . "</BREWER>\n";
		if ($_SESSION['measFluid2'] == "gallons") { $xml_output .= "\t\t<BATCH_SIZE>" . round(($row_log['brewYield'] * 3.785), 3) . "</BATCH_SIZE>\n"; } else { $xml_output .= "\t\t<BATCH_SIZE>" . $row_log['brewYield'] . "</BATCH_SIZE>\n";  }
		$xml_output .= "\t\t<BOIL_SIZE></BOIL_SIZE>\n";
		$xml_output .= "\t\t<BOIL_TIME>".number_format($row_log['brewBoilTime'],1)."</BOIL_TIME>\n";
		// Begin <NOTES> and associated fermentation tags
		if ($source == "brewLog") {
			$replaced = strtr($row_log['brewInfo'],$html_remove);
			$xml_output .= "\t\t<NOTES>" . strip_tags($replaced) . "</NOTES>\n";
			$xml_output .= "\t\t<EFFICIENCY>" . number_format($row_log['brewEfficiency'],1) .  "</EFFICIENCY>\n";
		}
		if ($source == "recipe") {
			$replaced = strtr($row_log['brewNotes'],$html_remove);
			$xml_output .= "\t\t<NOTES>" . strip_tags($replaced) . "</NOTES>\n";
		}
		// Begin <STYLE> tag (contains all associate beer style information)
		$xml_output .= "\t\t<STYLE>\n";
			$replaced = strtr($row_log['brewStyle'],$html_remove);
			$xml_output .= "\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
			$xml_output .= "\t\t\t<VERSION>1</VERSION>\n";
			$xml_output .= "\t\t\t<CATEGORY>" . $row_style['brewStyleCategory'] . "</CATEGORY>\n";
			$xml_output .= "\t\t\t<CATEGORY_NUMBER>" . $row_style['brewStyleGroup'] . "</CATEGORY_NUMBER>\n";
			$xml_output .= "\t\t\t<STYLE_LETTER>" . $row_style['brewStyleNum'] . "</STYLE_LETTER>\n";
			$xml_output .= "\t\t\t<STYLE_GUIDE>" . "BJCP" . "</STYLE_GUIDE>\n";
			$xml_output .= "\t\t\t<TYPE>" . $row_style['brewStyleType'] . "</TYPE>\n";
			if ($row_style['brewStyleOG'] == "") { $xml_output .= "\t\t\t<OG_MIN>" . "Varies" . "</OG_MIN>\n"; }
			if ($row_style['brewStyleOG'] != "") { $xml_output .= "\t\t\t<OG_MIN>" . number_format($row_style['brewStyleOG'],3) . "</OG_MIN>\n"; }
			if ($row_style['brewStyleOG'] == "") { $xml_output .= "\t\t\t<OG_MAX>" . "Varies" . "</OG_MAX>\n"; }
			if ($row_style['brewStyleOG'] != "") { $xml_output .= "\t\t\t<OG_MAX>" . number_format($row_style['brewStyleOGMax'],3) . "</OG_MAX>\n"; }
			if ($row_style['brewStyleFG'] == "") { $xml_output .= "\t\t\t<FG_MIN>" . "Varies" . "</FG_MIN>\n"; }
			if ($row_style['brewStyleFG'] != "") { $xml_output .= "\t\t\t<FG_MIN>" . number_format($row_style['brewStyleFGMax'],3) . "</FG_MIN>\n"; }
			if ($row_style['brewStyleFG'] == "") {$xml_output .= "\t\t\t<FG_MAX>" . "Varies" . "</FG_MAX>\n"; }
			if ($row_style['brewStyleFG'] != "") {$xml_output .= "\t\t\t<FG_MAX>" . number_format($row_style['brewStyleFG'],3) . "</FG_MAX>\n"; }
			if ($row_style['brewStyleIBU'] == "") { $xml_output .= "\t\t\t<IBU_MIN>" . "Varies" . "</IBU_MIN>\n"; }
			if ($row_style['brewStyleIBU'] != "") { $xml_output .= "\t\t\t<IBU_MIN>" . number_format($row_style['brewStyleIBU'],1) . "</IBU_MIN>\n"; }
			if ($row_style['brewStyleIBU'] == "") { $xml_output .= "\t\t\t<IBU_MAX>" . "Varies" . "</IBU_MAX>\n"; }
			if ($row_style['brewStyleIBU'] != "") { $xml_output .= "\t\t\t<IBU_MAX>" . number_format($row_style['brewStyleIBUMax'],1) . "</IBU_MAX>\n"; }
			if ($row_style['brewStyleSRM'] == "") { $xml_output .= "\t\t\t<COLOR_MIN>" . "Varies" . "</COLOR_MIN>\n"; }
			if ($row_style['brewStyleSRM'] != "") { $xml_output .= "\t\t\t<COLOR_MIN>" . number_format($row_style['brewStyleSRM'],1) . "</COLOR_MIN>\n"; }
			if ($row_style['brewStyleSRM'] == "") { $xml_output .= "\t\t\t<COLOR_MAX>" . "Varies" . "</COLOR_MAX>\n"; }
			if ($row_style['brewStyleSRM'] != "") { $xml_output .= "\t\t\t<COLOR_MAX>" . number_format($row_style['brewStyleSRMMax'],1) . "</COLOR_MAX>\n"; }
			if ($row_style['brewStyleABV'] == "") { $xml_output .= "\t\t\t<ABV_MIN>" . "Varies" . "</ABV_MIN>\n"; }
			if ($row_style['brewStyleABV'] != "") { $xml_output .= "\t\t\t<ABV_MIN>" . number_format($row_style['brewStyleABV'],1) . "</ABV_MIN>\n"; }
			if ($row_style['brewStyleABV'] == "") { $xml_output .= "\t\t\t<ABV_MAX>" . "Varies" . "</ABV_MAX>\n"; }
			if ($row_style['brewStyleABV'] != "") { $xml_output .= "\t\t\t<ABV_MAX>" . number_format($row_style['brewStyleABVMax'],1) . "</ABV_MAX>\n"; }
		$xml_output .= "\t\t</STYLE>\n";

		// Begin <EQUIPMENT> tag
		if (($source == "brewLog") && ($row_log['brewEquipProfile'] != "")) {
			$xml_output .= "\t\t<EQUIPMENT>\n";
			$replaced = strtr($row_equip_profiles['equipProfileName'],$html_remove);
			$xml_output .= "\t\t\t<NAME>".strip_tags($replaced)."</NAME>\n";
			$xml_output .= "\t\t\t<VERSION>1</VERSION>\n";
			if ($_SESSION['measWeight2'] == "pounds") {
				$xml_output .= "\t\t\t<BOIL_SIZE>".weightconvert($row_equip_profiles['equipBoilVolume'], "kilograms")."</BOIL_SIZE>\n";
				$xml_output .= "\t\t\t<BATCH_SIZE>".weightconvert($row_equip_profiles['equipBatchSize'], "kilograms")."</BATCH_SIZE>\n";
				$xml_output .= "\t\t\t<TUN_VOLUME>".weightconvert($row_equip_profiles['equipMashTunVolume'], "kilograms")."</TUN_VOLUME>\n";
				$xml_output .= "\t\t\t<TUN_WEIGHT>".weightconvert($row_equip_profiles['equipMashTunWeight'], "kilograms")."</TUN_WEIGHT>\n";
				$xml_output .= "\t\t\t<TOP_UP_WATER>".weightconvert($row_equip_profiles['equipTopUp'], "kilograms")."</TOP_UP_WATER>\n";
				$xml_output .= "\t\t\t<LAUTER_DEADSPACE>".weightconvert($row_equip_profiles['equipMashTunDeadspace'], "kilograms")."</LAUTER_DEADSPACE>\n";
				$xml_output .= "\t\t\t<TOP_UP_KETTLE>".weightconvert($row_equip_profiles['equipTopUpKettle'], "kilograms")."</TOP_UP_KETTLE>\n";
				$xml_output .= "\t\t\t<TRUB_CHILLER_LOSS>".weightconvert($row_equip_profiles['equipLoss'], "kilograms")."</TRUB_CHILLER_LOSS>\n";
			} else {
				$xml_output .= "\t\t\t<BOIL_SIZE>".$row_equip_profiles['equipBoilVolume']."</BOIL_SIZE>\n";
				$xml_output .= "\t\t\t<BATCH_SIZE>".$row_equip_profiles['equipBatchSize']."</BATCH_SIZE>\n";
				$xml_output .= "\t\t\t<TUN_VOLUME>".$row_equip_profiles['equipMashTunVolume']."</TUN_VOLUME>\n";
				$xml_output .= "\t\t\t<TUN_WEIGHT>".$row_equip_profiles['equipMashTunWeight']."</TUN_WEIGHT>\n";
				$xml_output .= "\t\t\t<TOP_UP_WATER>".$row_equip_profiles['equipTopUp']."</TOP_UP_WATER>\n";
				$xml_output .= "\t\t\t<LAUTER_DEADSPACE>".$row_equip_profiles['equipMashTunDeadspace']."</LAUTER_DEADSPACE>\n";
				$xml_output .= "\t\t\t<TOP_UP_KETTLE>".$row_equip_profiles['equipTopUpKettle']."</TOP_UP_KETTLE>\n";
				$xml_output .= "\t\t\t<TRUB_CHILLER_LOSS>".$row_equip_profiles['equipLoss']."</TRUB_CHILLER_LOSS>\n";
			}
			$xml_output .= "\t\t\t<TUN_SPECIFIC_HEAT>".$row_equip_profiles['equipMashTunSpecificHeat']."</TUN_SPECIFIC_HEAT>\n";
			$xml_output .= "\t\t\t<EVAP_RATE>".$row_equip_profiles['equipEvapRate']."</EVAP_RATE>\n";
			$xml_output .= "\t\t\t<BOIL_TIME>".$row_log['brewBoilTime']."</BOIL_TIME>\n";
			$xml_output .= "\t\t\t<HOP_UTILIZATION>".$row_equip_profiles['equipHopUtil']."</HOP_UTILIZATION>\n";
			$replaced = strtr($row_equip_profiles['equipNotes'],$html_remove);
			$xml_output .= "\t\t\t<NOTES>".strip_tags($replaced)."</NOTES>\n";
			$xml_output .= "\t\t</EQUIPMENT>\n";
		}

		// Begin <HOPS> tag (contains all Hop information)
		$xml_output .= "\t\t<HOPS>\n";

		for ($i=1;$i<=15;$i++) {
			$key = "brewHops";
			$key1 = $key.$i;
			$key2 = $key1."Weight";
			$key3 = $key1."Use";
			$key4 = $key1."Time";
			$key5 = $key1."Type";
			$key6 = $key1."Form";
			$key7 = $key1."IBU";
			if ($row_log[$key1] !="") {
				$xml_output .= "\t\t\t<HOP>\n";
				$replaced = strtr($row_log[$key1],$html_remove);
				$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
				$xml_output .= "\t\t\t\t<VERSION>1</VERSION>\n";
				$xml_output .= "\t\t\t\t<ALPHA>" . number_format($row_log[$key7],1) . "</ALPHA>\n";
				if ($_SESSION['measWeight1'] == "ounces") { // BeerXML standard is kilograms
					$xml_output .= "\t\t\t\t<AMOUNT>" . round(($row_log[$key2] * 0.028349), 6)."</AMOUNT>\n";
				} else {
					$xml_output .= "\t\t\t\t<AMOUNT>" . $row_log[$key2]."</AMOUNT>\n";
				}
				$xml_output .= "\t\t\t\t<USE>" . $row_log[$key3] . "</USE>\n";
				$xml_output .= "\t\t\t\t<TIME>" . $row_log[$key4] . "</TIME>\n";
				$xml_output .= "\t\t\t\t<TYPE>" . $row_log[$key5] . "</TYPE>\n";
				$xml_output .= "\t\t\t\t<FORM>" . $row_log[$key6] . "</FORM>\n";
				$xml_output .= "\t\t\t</HOP>\n";
			}
		}

		$xml_output .= "\t\t</HOPS>\n";

		// FERMENTABLES
		$xml_output .= "\t\t<FERMENTABLES>\n";

		// Begin <FERMENTABLES> tags for extracts
		for ($i=1;$i<=5;$i++) {
			$key1 = "brewExtract".$i;
			$key2 = "brewExtract".$i."Weight";
			if ($row_log[$key1] !="") {
				$xml_output .= "\t\t\t<FERMENTABLE>\n";
				$replaced = strtr($row_log[$key1],$html_remove);
				$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
				$xml_output .= "\t\t\t\t<TYPE>" . "Extract" . "</TYPE>\n";
				if ($_SESSION['measWeight2'] == "pounds") { // BeerXML standard is kilograms
					$xml_output .= "\t\t\t\t<AMOUNT>" . round(($row_log[$key2] * 0.4535), 2)."</AMOUNT>\n";
				} else {
					$xml_output .= "\t\t\t\t<AMOUNT>" . $row_log[$key2]."</AMOUNT>\n";
				}
				$xml_output .= "\t\t\t</FERMENTABLE>\n";
			}
		}

		// Begin <FERMENTABLES> tags for grains
		for ($i=1;$i<=15;$i++) {
			$key1 = "brewGrain".$i;
			$key2 = "brewGrain".$i."Weight";
			if ($row_log[$key1] !="") {
				$xml_output .= "\t\t\t<FERMENTABLE>\n";
				$replaced = strtr($row_log[$key1],$html_remove);
				$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
				$xml_output .= "\t\t\t\t<TYPE>" . "Grain" . "</TYPE>\n";

				if ($_SESSION['measWeight2'] == "pounds") { // BeerXML standard is kilograms
					$xml_output .= "\t\t\t\t<AMOUNT>" . round(($row_log[$key2] * 0.4535), 2)."</AMOUNT>\n";
				} else {
					$xml_output .= "\t\t\t\t<AMOUNT>" . $row_log[$key2]."</AMOUNT>\n";
				}
				$xml_output .= "\t\t\t</FERMENTABLE>\n";
			}
		}

		// Begin <FERMENTABLES> tags for adjuncts
		for ($i=1;$i<=9;$i++) {
			$key1 = "brewAddition".$i;
			$key2 = "brewAddition".$i."Amt";
			if ($row_log[$key1] !="") {
				$xml_output .= "\t\t\t<FERMENTABLE>\n";
					$replaced = strtr($row_log[$key1],$html_remove);
					$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
					$xml_output .= "\t\t\t\t<TYPE>" . "Adjunct" . "</TYPE>\n";

					if ($_SESSION['measWeight2'] == "pounds") { // BeerXML standard is kilograms
						$xml_output .= "\t\t\t\t<AMOUNT>" . round(($row_log[$key2] * 0.4535), 2)."</AMOUNT>\n";
					} else {
						$xml_output .= "\t\t\t\t<AMOUNT>" . $row_log[$key2]."</AMOUNT>\n";
					}
				$xml_output .= "\t\t\t</FERMENTABLE>\n";
			}

		}

		$xml_output .= "\t\t</FERMENTABLES>\n";

		// Begin <YEASTS> tag
		$yeast_convert = array(
			"ml" => "",
			"gr" => "",
			" " => ""
		);

		if ($row_log['brewYeastProfile'] == "") {
			$xml_output .= "\t\t<YEASTS>\n";
			$xml_output .= "\t\t\t<YEAST>\n";
			$replaced = strtr($row_log['brewYeast'],$html_remove);
			$yeast_amount = strtr($row_log['brewYeastAmount'],$yeast_convert);
			$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
			$xml_output .= "\t\t\t\t<VERSION>1</VERSION>\n";
			$xml_output .= "\t\t\t\t<TYPE>" . $row_log['brewYeastType'] . "</TYPE>\n";
			$xml_output .= "\t\t\t\t<FORM>" . $row_log['brewYeastForm'] . "</FORM>\n";
			$xml_output .= "\t\t\t\t<AMOUNT>" .($yeast_amount/1000). "</AMOUNT>\n";
			if (strpos($row_log['brewYeastAmount'], 'gr') !== false) $xml_output .= "\t\t\t\t<AMOUNT_IS_WEIGHT>TRUE</AMOUNT_IS_WEIGHT>\n";
			$xml_output .= "\t\t\t\t<LABORATORY>" . $row_log['brewYeastMan'] . "</LABORATORY>\n";
			$xml_output .= "\t\t\t</YEAST>\n";
			$xml_output .= "\t\t</YEASTS>\n";
		}
		if ($row_log['brewYeastProfile'] != "") {
			$xml_output .= "\t\t<YEASTS>\n";
			$xml_output .= "\t\t\t<YEAST>\n";
			$replaced = strtr($row_yeast_profiles['yeastName'],$html_remove);
			$yeast_amount = strtr($row_log['brewYeastAmount'],$yeast_convert);
			$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
			$xml_output .= "\t\t\t\t<VERSION>1</VERSION>\n";
			$xml_output .= "\t\t\t\t<TYPE>" . $row_yeast_profiles['yeastType'] . "</TYPE>\n";
			$xml_output .= "\t\t\t\t<FORM>" . $row_yeast_profiles['yeastForm']. "</FORM>\n";
			$xml_output .= "\t\t\t\t<AMOUNT>" .($yeast_amount/1000). "</AMOUNT>\n";
			if (strpos($row_log['brewYeastAmount'], 'gr') !== false) $xml_output .= "\t\t\t\t<AMOUNT_IS_WEIGHT>TRUE</AMOUNT_IS_WEIGHT>\n";
			$xml_output .= "\t\t\t\t<LABORATORY>" . $row_yeast_profiles['yeastLab'] . "</LABORATORY>\n";
			$xml_output .= "\t\t\t\t<PRODUCT_ID>" . $row_yeast_profiles['yeastProdID'] . "</PRODUCT_ID>\n";
			if ($_SESSION['measTemp'] == "F") {
				$xml_output .= "\t\t\t\t<MIN_TEMPERATURE>" . tempconvert($row_yeast_profiles['yeastMinTemp'], "C") . "</MIN_TEMPERATURE>\n";
				$xml_output .= "\t\t\t\t<MAX_TEMPERATURE>" . tempconvert($row_yeast_profiles['yeastMaxTemp'], "C") . "</MAX_TEMPERATURE>\n";
			} else {
				$xml_output .= "\t\t\t\t<MIN_TEMPERATURE>" . $row_yeast_profiles['yeastMinTemp'] . "</MIN_TEMPERATURE>\n";
				$xml_output .= "\t\t\t\t<MAX_TEMPERATURE>" . $row_yeast_profiles['yeastMaxTemp'] . "</MAX_TEMPERATURE>\n";
			}
			$xml_output .= "\t\t\t\t<FLOCCULATION>" . $row_yeast_profiles['yeastFloc'] . "</FLOCCULATION>\n";
			$xml_output .= "\t\t\t\t<ATTENUATION>" . $row_yeast_profiles['yeastAtten'] . "</ATTENUATION>\n";
			$xml_output .= "\t\t\t\t<BEST_FOR>" . $row_yeast_profiles['yeastBestFor'] . "</BEST_FOR>\n";
			$xml_output .= "\t\t\t\t<MAX_REUSE>" . $row_yeast_profiles['yeastMaxReuse'] . "</MAX_REUSE>\n";
			$replaced = strtr($row_yeast_profiles['yeastNotes'],$html_remove);
			$xml_output .= "\t\t\t\t<NOTES>" . strip_tags($replaced) . "</NOTES>\n";
			$xml_output .= "\t\t\t</YEAST>\n";
			$xml_output .= "\t\t</YEASTS>\n";
		}

		// Begin <MISCS> tags for non-fermentables
		$xml_output .= "\t\t<MISCS>\n";

		for ($i=1;$i<=4;$i++) {
			$key = "brewMisc".$i;
			$key1 = $key."Name";
			$key2 = $key."Amount";
			$key3 = $key."Use";
			$key4 = $key."Time";
			$key5 = $key."Type";
			if ($row_log[$key1] !="") {
				$xml_output .= "\t\t\t<MISC>\n";
				$xml_output .= "\t\t\t\t<NAME>" . $row_log[$key1] . "</NAME>\n";
				$xml_output .= "\t\t\t\t<VERSION>1</VERSION>\n";
				$xml_output .= "\t\t\t\t<TYPE>" . $row_log[$key5] . "</TYPE>\n";
				$xml_output .= "\t\t\t\t<USE>" . $row_log[$key3] . "</USE>\n";
				$xml_output .= "\t\t\t\t<TIME>" . $row_log[$key4] . "</TIME>\n";
				$xml_output .= "\t\t\t\t<AMOUNT>" . $row_log[$key2] . "</AMOUNT>\n";
				$xml_output .= "\t\t\t</MISC>\n";
			}
		}

		$xml_output .= "\t\t</MISCS>\n";

		// Begin <WATERS> tag (contains all water information)
		if (($source == "brewLog") && ($row_log['brewWaterProfile'] == "")) {
			$xml_output .= "\t\t<WATERS>\n";
			$xml_output .= "\t\t\t<WATER>\n";
				$replaced = strtr($row_log['brewWaterName'],$html_remove);
				$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
				$xml_output .= "\t\t\t\t<VERSION>1</VERSION>\n";
				if ($row_log['brewWaterAmount'] == "" ) { $xml_output .= "\t\t\t\t<AMOUNT></AMOUNT>\n"; }
				if ($row_log['brewWaterAmount'] != "" ) { $xml_output .= "\t\t\t\t<AMOUNT>" . $row_log['brewWaterAmount'] . "</AMOUNT>\n"; }
				if ($row_log['brewWaterCalcium'] == "" ) { $xml_output .= "\t\t\t\t<CALCIUM></CALCIUM>\n"; }
				if ($row_log['brewWaterCalcium'] != "" ) { $xml_output .= "\t\t\t\t<CALCIUM>" . $row_log['brewWaterCalcium'] . "</CALCIUM>\n"; }
				if ($row_log['brewWaterBicarb'] == "" ) { $xml_output .= "\t\t\t\t<BICARBONATE></BICARBONATE>\n"; }
				if ($row_log['brewWaterBicarb'] != "" ) { $xml_output .= "\t\t\t\t<BICARBONATE>" . $row_log['brewWaterBicarb'] . "</BICARBONATE>\n"; }
				if ($row_log['brewWaterSulfate'] == "" ) { $xml_output .= "\t\t\t\t<SULFATE></SULFATE>\n"; }
				if ($row_log['brewWaterSulfate'] != "" ) { $xml_output .= "\t\t\t\t<SULFATE>" . $row_log['brewWaterSulfate'] . "</SULFATE>\n"; }
				if ($row_log['brewWaterChloride'] == "" ) { $xml_output .= "\t\t\t\t<CHLORIDE></CHLORIDE>\n"; }
				if ($row_log['brewWaterChloride'] != "" ) { $xml_output .= "\t\t\t\t<CHLORIDE>" . $row_log['brewWaterChloride'] . "</CHLORIDE>\n"; }
				if ($row_log['brewWaterSodium'] == "" ) { $xml_output .= "\t\t\t\t<SODIUM></SODIUM>\n"; }
				if ($row_log['brewWaterSodium'] != "" ) { $xml_output .= "\t\t\t\t<SODIUM>" . $row_log['brewWaterSodium'] . "</SODIUM>\n"; }
				if ($row_log['brewWaterMagnesium'] == "" ) { $xml_output .= "\t\t\t\t<MAGNESIUM></MAGNESIUM>\n"; }
				if ($row_log['brewWaterMagnesium'] != "" ) { $xml_output .= "\t\t\t\t<MAGNESIUM>" . $row_log['brewWaterMagnesium'] . "</MAGNESIUM>\n"; }
				if ($row_log['brewWaterAmount'] == "" ) { $xml_output .= "\t\t\t\t<PH>" . $row_log['brewWaterPH'] . "</PH>\n"; }
				if ($row_log['brewWaterNotes'] == "" ) { $xml_output .= "\t\t\t\t<NOTES></NOTES>\n"; }
				if ($row_log['brewWaterNotes'] != "" ) { $xml_output .= "\t\t\t\t<NOTES>" . $row_log['brewWaterNotes'] . "</NOTES>\n"; }
			$xml_output .= "\t\t\t</WATER>\n";
			$xml_output .= "\t\t</WATERS>\n";
		}

		if (($source == "brewLog") && ($row_log['brewWaterProfile'] != "")) {
			$xml_output .= "\t\t<WATERS>\n";
			$xml_output .= "\t\t\t<WATER>\n";
			$replaced = strtr($row_water_profiles['waterName'],$html_remove);
			$xml_output .= "\t\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
			$xml_output .= "\t\t\t\t<VERSION>1</VERSION>\n";
			$xml_output .= "\t\t\t\t<AMOUNT>" . $row_water_profiles['waterAmount'] . "</AMOUNT>\n";
			$xml_output .= "\t\t\t\t<CALCIUM>" . $row_water_profiles['waterCalcium'] . "</CALCIUM>\n";
			$xml_output .= "\t\t\t\t<BICARBONATE>" . $row_water_profiles['waterBicarbonate'] . "</BICARBONATE>\n";
			$xml_output .= "\t\t\t\t<SULFATE>" . $row_water_profiles['waterSulfate'] . "</SULFATE>\n";
			$xml_output .= "\t\t\t\t<CHLORIDE>" . $row_water_profiles['waterChloride'] . "</CHLORIDE>\n";
			$xml_output .= "\t\t\t\t<SODIUM>" . $row_water_profiles['waterSodium'] . "</SODIUM>\n";
			$xml_output .= "\t\t\t\t<MAGNESIUM>" . $row_water_profiles['waterMagnesium'] . "</MAGNESIUM>\n";
			$xml_output .= "\t\t\t\t<PH>" . $row_water_profiles['waterPH'] . "</PH>\n";
			$replaced = strtr($row_water_profiles['waterNotes'],$html_remove);
			$xml_output .= "\t\t\t\t<NOTES>" . strip_tags($replaced) . "</NOTES>\n";
			$xml_output .= "\t\t\t</WATER>\n";
			$xml_output .= "\t\t</WATERS>\n";
		}

		// Begin <MASH> tag (contains all mash information)
		if (($source == "brewLog") && ($row_log['brewMashProfile'] == "")) {
			$xml_output .= "\t\t<MASH>\n";
			$xml_output .= "\t\t\t<NAME>" . $row_log['brewMashType'] . "</NAME>\n";
			$xml_output .= "\t\t\t<VERSION>1</VERSION>\n";
			if (($_SESSION['measTemp'] == "F") && ($row_log['brewMashGrainTemp'] != ""))  { $xml_output .= "\t\t\t<GRAIN_TEMP>" . tempconvert($row_log['brewMashGrainTemp'], "C") . "</GRAIN_TEMP>\n";  }
			elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewMashGrainTemp'] != "")) { $xml_output .= "\t\t\t<GRAIN_TEMP>" . $row_log['brewMashGrainTemp'] . "</GRAIN_TEMP>\n";	}
			else $xml_output .= "\t\t\t<GRAIN_TEMP></GRAIN_TEMP>\n";
			$xml_output .= "\t\t\t\t<MASH_STEPS>\n";
				for ($i=1;$i<=5;$i++) {
					$key = "brewMashStep".$i;
					$key1 = $key."Name";
					$key2 = $key."Desc";
					$key3 = $key."Temp";
					$key4 = $key."Time";
					if ($row_log[$key1] != "") {
						$xml_output .= "\t\t\t\t\t<MASH_STEP>\n";
						$xml_output .= "\t\t\t\t\t\t<NAME>" . $row_log[$key1] . "</NAME>\n";
						$xml_output .= "\t\t\t\t\t\t<VERSION>1</VERSION>\n";
						$xml_output .= "\t\t\t\t\t\t<TYPE>" . $row_log[$key2] . "</TYPE>\n";
						if (($_SESSION['measTemp'] == "F") && ($row_log['$key3'] != "")) { $xml_output .= "\t\t\t\t\t\t<STEP_TEMP>" . tempconvert($row_log[$key3], "C") . "</STEP_TEMP>\n"; }
						elseif (($_SESSION['measTemp'] == "C") && ($row_log[$key3] != "")) { $xml_output .= "\t\t\t\t\t\t<STEP_TEMP>" . $row_log[$key3] . "</STEP_TEMP>\n"; }
						else { $xml_output .= "\t\t\t\t\t\t<STEP_TEMP></STEP_TEMP>\n"; }
						$xml_output .= "\t\t\t\t\t\t<STEP_TIME>" . $row_log[$key4] . "</STEP_TIME>\n";
						$xml_output .= "\t\t\t\t\t</MASH_STEP>\n";
					}
				}
			$xml_output .= "\t\t\t\t</MASH_STEPS>\n";
			if ($row_log['brewMashTunTemp'] == "") $xml_output .= "\t\t\t<TUN_TEMP></TUN_TEMP>\n";
			if ($row_log['brewMashTunTemp'] != "") {
				if ($_SESSION['measTemp'] == "F") { $xml_output .= "\t\t\t<TUN_TEMP>" . tempconvert($row_log['brewMashTunTemp'], "C") . "</TUN_TEMP>\n"; }
				else { $xml_output .= "\t\t\t<TUN_TEMP>" . $row_log['brewMashTunTemp'] . "</TUN_TEMP>\n"; }
			}
			if ($row_log['brewMashSpargeTemp'] == "") $xml_output .= "\t\t\t<SPARGE_TEMP></SPARGE_TEMP>\n";
			if ($row_log['brewMashSpargeTemp'] != "") {
				if ($_SESSION['measTemp'] == "F") { $xml_output .= "\t\t\t<SPARGE_TEMP>" . tempconvert($row_log['brewMashSpargeTemp'], "C") . "</SPARGE_TEMP>\n"; }
				else { $xml_output .= "\t\t\t<SPARGE_TEMP>" . $row_log['brewMashSpargeTemp'] . "</SPARGE_TEMP>\n"; }
			}
			if ($row_log['brewMashPH'] == "") $xml_output .= "\t\t\t<PH></PH>\n";
			if ($row_log['brewMashPH'] != "") $xml_output .= "\t\t\t<PH>" . $row_log['brewMashPH'] . "</PH>\n";
			if ($row_log['brewMashEquipAdjust'] == "") $xml_output .= "\t\t\t<EQUIP_ADJUST></EQUIP_ADJUST>\n";
			if ($row_log['brewMashEquipAdjust'] != "") $xml_output .= "\t\t\t<EQUIP_ADJUST>" . $row_log['brewMashEquipAdjust'] . "</EQUIP_ADJUST>\n";
			$xml_output .= "\t\t</MASH>\n";
		}

		if (($source == "brewLog") && ($row_log['brewMashProfile'] != "")) {
			$xml_output .= "\t\t<MASH>\n";
			$replaced = strtr($row_mash_profiles['mashProfileName'],$html_remove);
			$xml_output .= "\t\t\t<NAME>" . strip_tags($replaced) . "</NAME>\n";
			$xml_output .= "\t\t\t<VERSION>1</VERSION>\n";
			if (($_SESSION['measTemp'] == "F") && ($row_mash_profiles['mashGrainTemp'] != "")) $xml_output .= "\t\t\t<GRAIN_TEMP>" . tempconvert($row_mash_profiles['mashGrainTemp'],"C") . "</GRAIN_TEMP>\n";
			else $xml_output .= "\t\t\t<GRAIN_TEMP>" . $row_mash_profiles['mashGrainTemp'] . "</GRAIN_TEMP>\n";
			if (($_SESSION['measTemp'] == "F") && ($row_mash_profiles['mashTunTemp'] != "")) $xml_output .= "\t\t\t<TUN_TEMP>" . tempconvert($row_mash_profiles['mashTunTemp'], "C") . "</TUN_TEMP>\n";
			else $xml_output .= "\t\t\t<TUN_TEMP>" . $row_mash_profiles['mashTunTemp'] . "</TUN_TEMP>\n";
			if (($_SESSION['measTemp'] == "F") && ($row_mash_profiles['mashSpargeTemp'] != "")) $xml_output .= "\t\t\t<SPARGE_TEMP>" . tempconvert($row_mash_profiles['mashSpargeTemp'], "C") . "</SPARGE_TEMP>\n";
			else $xml_output .= "\t\t\t<SPARGE_TEMP>" . $row_mash_profiles['mashSpargeTemp'] . "</SPARGE_TEMP>\n";
			$xml_output .= "\t\t\t<PH>" . $row_mash_profiles['mashPH'] . "</PH>\n";
			$xml_output .= "\t\t\t<EQUIP_ADJUST>" . $row_mash_profiles['mashEquipAdj'] . "</EQUIP_ADJUST>\n";
			$xml_output .= "\t\t\t\t<MASH_STEPS>\n";
				do {
					$xml_output .= "\t\t\t\t\t<MASH_STEP>\n";
					$xml_output .= "\t\t\t\t\t\t<NAME>" . $row_mash_steps['stepName'] . "</NAME>\n";
					$xml_output .= "\t\t\t\t\t\t<VERSION>1</VERSION>\n";
					$xml_output .= "\t\t\t\t\t\t<TYPE>" . $row_mash_steps['stepType'] . "</TYPE>\n";
					if (($_SESSION['measTemp'] == "F") && ($row_mash_steps['stepTemp'] != "")) $xml_output .= "\t\t\t\t\t\t<STEP_TEMP>" . tempconvert($row_mash_steps['stepTemp'], "C") . "</STEP_TEMP>\n";
					else $xml_output .= "\t\t\t\t\t\t<STEP_TEMP>" . $row_mash_steps['stepTemp']. "</STEP_TEMP>\n";
					$xml_output .= "\t\t\t\t\t\t<STEP_TIME>" . $row_mash_steps['stepTime'] . "</STEP_TIME>\n";
					$xml_output .= "\t\t\t\t\t\t<RAMP_TIME>" . $row_mash_steps['stepTime'] . "</RAMP_TIME>\n";
					if (($_SESSION['measTemp'] == "F") && ($row_mash_steps['stepEndTemp'] != "")) $xml_output .= "\t\t\t\t\t\t<END_TEMP>" . tempconvert($row_mash_steps['stepEndTemp'], "C") . "</END_TEMP>\n";
					else $xml_output .= "\t\t\t\t\t\t<END_TEMP>" . $row_mash_steps['stepEndTemp'] . "</END_TEMP>\n";
					if (($_SESSION['measFluid2'] == "gallons") && ($row_mash_steps['stepInfuseAmt'] != "")) $xml_output .= "\t\t\t\t\t\t<INFUSE_AMT>" . volumeconvert($row_mash_steps['stepInfuseAmt'], "liters"). "</INFUSE_AMT>\n";
					else $xml_output .= "\t\t\t\t\t\t<INFUSE_AMT>" . $row_mash_steps['stepInfuseAmt'] . "</INFUSE_AMT>\n";
					$xml_output .= "\t\t\t\t\t</MASH_STEP>\n";
				} while ($row_mash_steps =  mysqli_fetch_assoc($mash_steps));
			$xml_output .= "\t\t\t\t</MASH_STEPS>\n";
			$xml_output .= "\t\t</MASH>\n";
		}

		// Escaping illegal characters
	    if ($source == "brewLog") $replaced = strtr($row_log['brewComments'],$html_remove);
	    else $replaced = "";
		$xml_output .= "\t\t<TASTE_NOTES>" . strip_tags($replaced) . "</TASTE_NOTES>\n";
		// Gravity information
		$xml_output .= "\t\t<OG>" . number_format(round($row_log['brewOG'], 3), 3) . "</OG>\n";
		$xml_output .= "\t\t<FG>" . number_format(round($row_log['brewFG'], 3), 3) . "</FG>\n";
		$xml_output .= "\t\t<EST_OG>" . number_format(round($row_log['brewOG'], 3), 3) . "</EST_OG>\n";
		$xml_output .= "\t\t<EST_FG>" . number_format(round($row_log['brewFG'], 3), 3) . "</EST_FG>\n";
		$xml_output .= "\t\t<DISPLAY_OG>" . number_format(round($row_log['brewOG'], 3), 3) . "</DISPLAY_OG>\n";
		$xml_output .= "\t\t<DISPLAY_FG>" . number_format(round($row_log['brewFG'], 3), 3) . "</DISPLAY_FG>\n";
		$xml_output .= "\t\t<PRIMARY_AGE>" . $row_log['brewPrimary'] . "</PRIMARY_AGE>\n";
		if (($_SESSION['measTemp'] == "F") && ($row_log['brewPrimaryTemp'] != "")) { $xml_output .= "\t\t<PRIMARY_TEMP>" .  tempconvert($row_log['brewPrimaryTemp'], "C") . "</PRIMARY_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewPrimaryTemp'] != "")) { $xml_output .= "\t\t<PRIMARY_TEMP>" . $row_log['brewPrimaryTemp'] . "</PRIMARY_TEMP>\n";	}
		else { $xml_output .= "\t\t<PRIMARY_TEMP></PRIMARY_TEMP>\n"; }

		if (($_SESSION['measTemp'] == "F") && ($row_log['brewPrimaryTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_PRIMARY_TEMP>" .  tempconvert($row_log['brewPrimaryTemp'], "C") . "</DISPLAY_PRIMARY_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewPrimaryTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_PRIMARY_TEMP>" . $row_log['brewPrimaryTemp'] . "</DISPLAY_PRIMARY_TEMP>\n";	}
		else { $xml_output .= "\t\t<DISPLAY_PRIMARY_TEMP></DISPLAY_PRIMARY_TEMP>\n"; }

		$xml_output .= "\t\t<SECONDARY_AGE>" . $row_log['brewSecondary'] . "</SECONDARY_AGE>\n";
		if (($_SESSION['measTemp'] == "F") && ($row_log['brewSecondaryTemp'] != "")) { $xml_output .= "\t\t<SECONDARY_TEMP>" . tempconvert($row_log['brewSecondaryTemp'], "C") . "</SECONDARY_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewSecondaryTemp'] != "")) { $xml_output .= "\t\t<SECONDARY_TEMP>" . $row_log['brewSecondaryTemp'] . "</SECONDARY_TEMP>\n"; }
		else { $xml_output .= "\t\t<SECONDARY_TEMP></SECONDARY_TEMP>\n"; }

		if (($_SESSION['measTemp'] == "F") && ($row_log['brewSecondaryTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_SECONDARY_TEMP>" . tempconvert($row_log['brewSecondaryTemp'], "C") . "</DISPLAY_SECONDARY_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewSecondaryTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_SECONDARY_TEMP>" . $row_log['brewSecondaryTemp'] . "</DISPLAY_SECONDARY_TEMP>\n"; }
		else { $xml_output .= "\t\t<DISPLAY_SECONDARY_TEMP></DISPLAY_SECONDARY_TEMP>\n"; }

		$xml_output .= "\t\t<TERTIARY_AGE>" . $row_log['brewTertiary'] . "</TERTIARY_AGE>\n";
		if (($_SESSION['measTemp'] == "F") && ($row_log['brewTertiaryTemp'] != "")) { $xml_output .= "\t\t<TERTIARY_TEMP>" . tempconvert($row_log['brewTertiaryTemp'], "C") . "</TERTIARY_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewTertiaryTemp'] != "")) { $xml_output .= "\t\t<TERTIARY_TEMP>" . $row_log['brewTertiaryTemp'] . "</TERTIARY_TEMP>\n"; }
		else $xml_output .= "\t\t<TERTIARY_TEMP></TERTIARY_TEMP>\n";

		if (($_SESSION['measTemp'] == "F") && ($row_log['brewTertiaryTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_TERTIARY_TEMP>" . tempconvert($row_log['brewTertiaryTemp'], "C") . "</DISPLAY_TERTIARY_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewTertiaryTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_TERTIARY_TEMP>" . $row_log['brewTertiaryTemp'] . "</DISPLAY_TERTIARY_TEMP>\n"; }
		else $xml_output .= "\t\t<DISPLAY_TERTIARY_TEMP></DISPLAY_TERTIARY_TEMP>\n";

		$xml_output .= "\t\t<AGE>" . $row_log['brewAge'] .  "</AGE>\n";
		if (($_SESSION['measTemp'] == "F") && ($row_log['brewAgeTemp'] != "")) { $xml_output .= "\t\t<AGE_TEMP>" . tempconvert($row_log['brewAgeTemp'], "C") .  "</AGE_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewAgeTemp'] != "")) { $xml_output .= "\t\t<AGE_TEMP>" . $row_log['brewAgeTemp'] . "</AGE_TEMP>\n"; }
		else { $xml_output .= "\t\t<AGE_TEMP></AGE_TEMP>\n";  }

		if (($_SESSION['measTemp'] == "F") && ($row_log['brewAgeTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_AGE_TEMP>" . tempconvert($row_log['brewAgeTemp'], "C") .  "</DISPLAY_AGE_TEMP>\n"; }
		elseif (($_SESSION['measTemp'] == "C") && ($row_log['brewAgeTemp'] != "")) { $xml_output .= "\t\t<DISPLAY_AGE_TEMP>" . $row_log['brewAgeTemp'] . "</DISPLAY_AGE_TEMP>\n"; }
		else { $xml_output .= "\t\t<DISPLAY_AGE_TEMP></DISPLAY_AGE_TEMP>\n";  }

		if ($source == "brewLog") {
			// Brew Date
			$xml_output .= "\t\t<DATE>" . $row_log['brewDate'] . "</DATE>\n";
		}
		$xml_output .= "\t\t<EST_COLOR>" . number_format(round($row_log['brewLovibond'], 1), 1) .  "</EST_COLOR>\n";
		$xml_output .= "\t\t<IBU>" . number_format(round($row_log['brewBitterness'], 1), 1) .  "</IBU>\n";
	$xml_output .= "\t</RECIPE>\n";
$xml_output .= "</RECIPES>\n";
$filename = str_replace(" ", "_", $row_log['brewName'] );
$filename = strtr($filename, $html_remove);
$filename = preg_replace('/[^a-zA-Z0-9\-\._]/','', $filename);
header("Content-Type: application/force-download");
header("Content-Disposition: attachment; filename=".strtolower($filename).".xml");
header("Pragma: no-cache");
header("Expires: 0");
echo $xml_output;
exit();
?>